v4.3.0 (2017-11-23)
---------------------------
* added load balancing (ArangoDBAsync.Builder.loadBalancingStrategy())
* added automatic acquiring of hosts for load balancing or as fallback (ArangoDBAsync.Builder.acquireHostList())

v4.2.7 (2017-11-03)
---------------------------
* added ArangoGraphAsync.exists()
* fixed de-/serialization of negative int values
* exclude junit dependency of json-simple

v4.2.5 (2017-10-16)
---------------------------
* added ArangoCollectionAsync.exists()
* added ArangoDatabaseAsync.exists()
* added BaseDocument.setId(String)
* added GraphCreateOptions.replicationFactor(Integer)
* ArangoDBAsync.shutdown() now closes all connections 

v4.2.4 (2017-09-04)
---------------------------
* fixed ArangoDatabaseAsync.transaction(): ignore null result
* added properties validation arangodb.host
* added ArangoCollectionAsync.ensure<IndexType>Index()
* made ArangoCollectionAsync.create<IndexType>Index() deprecated
* let ArangoCursor implement Iterable
* fixed issue #145: ArangoCollectionAsync.updateDocument()
* fixed issue #145: ArangoVertexCollectionAsync.updateVertex()
* fixed issue #145: ArangoEdgeCollectionAsync.updateEdge()

v4.2.3 (2017-07-31)
---------------------------
* added ArangoDatabaseAsync.getPermissions(String)
* added ArangoCollectionAsync.getPermissions(String)
* added ArangoDBAsync.grantDefaultDatabaseAccess(String, Permissions)
* added ArangoDBAsync.grantDefaultCollectionAccess(String, Permissions)
* added ArangoDatabaseAsync.grantDefaultCollectionAccess(String, Permissions)
* fixed DateUtil (thread-safe)

v4.2.2 (2017-07-20)
---------------------------
* added ArangoDatabaseAsync.grantAccess(String, Permissions)
* added ArangoCollectionAsync.grantAccess(String, Permissions)
* added ArangoDatabaseAsync.resetAccess(String)
* added ArangoCollectionAsync.resetAccess(String)
* added ArangoDBAsync.updateUserDefaultDatabaseAccess(String, Permissions)
* added ArangoDBAsync.updateUserDefaultCollectionAccess(String, Permissions)
* added ArangoDatabaseAsync.updateUserDefaultCollectionAccess(String, Permissions)
* added ArangoCollectionAsync.getDocuments(Collection<String>, Class)
* added connection/handshake retry on same host
* added deduplicate field for hash/skiplist index

v4.2.1 (2017-06-20)
---------------------------
* fixed deserializing of internal field _id

v4.2.0 (2017-06-14)
---------------------------
* added ArangoDBVersion.getLicense()
* added ArangoDB.getRole()
* added ArangoDBException.getException()
* updated velocypack-module-jdk8
  * added support for deserializing null values into Optional.empty()
  * added support for deserializing null values into OptionalDouble.empty()
  * added support for deserializing null values into OptionalInt.empty()
  * added support for deserializing null values into OptionalLong.empty()

v4.1.12 (2017-04-21)
---------------------------
* added ArangoDatabaseAsync.cursor()
* optimized ArangoDB.Builder for better multi thread support

v4.1.11 (2017-03-24)
---------------------------
* fixed exception handling in Connection
* extracted VelocyPack implementation to https://github.com/arangodb/java-velocypack
* added convenience methods (ArangoDatabase.arango(), ArangoCollection.db(), ArangoGraph.db())
* added convenience methods (ArangoCollection.getIndex(String), .deleteIndex(key))
* added connection pooling
* added extension point for VelocyPack serialization (ArangoDBAsync.registerModule())
* added dependency java-velocypack-module-jdk8
* added support for replacing build-in VelocyPack serializer/deserializer
* added ArangoDatabaseAsync.getVersion(), ArangoDatabaseAsync.getAccessibleDatabases()

v4.1.10 (2017-02-22)
---------------------------
* changed velocystream message sending to async
* changed return value of getVertex/getEdge to null if not exists
* added support for multiple hosts as fallbacks
* added support serializing collections with null elements
* added support serializing non-generic classes that extend collections
* added support serializing/deserializing byte and Byte
* added default value "root" for user
* fixed serialization of additionalFields for objects and maps
* fixed VPack parsing (arrays of specific length)

v4.1.9 (2017-02-10)
---------------------------
* added missing IndexType.edge
* fixed URI encoding

v4.1.8 (2017-02-03)
---------------------------
* changed java.util.Date serialization from VPack.date to VPack.string (ISO 8601)
* changed java.sql.Date serialization from VPack.date to VPack.string (ISO 8601)
* changed java.sql.Timestamp serialization from VPack.date to VPack.string (ISO 8601)
* changed java.java.time.Instant serialization from VPack.date to VPack.string (ISO 8601)
* changed java.java.time.LocalDate serialization from VPack.date to VPack.string (ISO 8601)
* changed java.java.time.LocalDateTime serialization from VPack.date to VPack.string (ISO 8601)
* added byte[] de-/serialization from/to VPack.string (Base64)
* added ArangoCollection.drop(isSystem)
* improved ArangoDBException with responseCode, errorNum, errorMessage
* changed ArangoCollection.deleteDocuments() to work with keys and documents
* fixed URL encoding bug (#97)
* fixed update/replaceDocumets with Json (#98)

v4.1.7 (2017-01-26)
---------------------------
* fixed importDocuments, insertDocuments to work with raw Jsons (issue #91)

v4.1.6 (2017-01-18)
---------------------------
* added serializer support for enclosing types

v4.1.5 (2017-01-12)
---------------------------
* fixed VPack String serialization (UTF-8 encoding)
* fixed VPack parsing of fields of type Object
* fixed VPack serializing of array with null values (issue #88)
* added configuration for custom annotations within VPack de-/serialization
* added support of transient modifier within VPack de-/serialization

v4.1.4 (2016-12-19)
---------------------------
* added VPack serializer/de-serializer for java.util.UUID
* fixed VPack parsing (issue #65, #80, #82)

v4.1.3 (2016-11-22)
---------------------------
* fixed error while serializing long values with VPackBuilder
* added bulk import API

v4.1.2 (2016-11-10)
---------------------------
* fixed GraphEntity for ArangoDatabase.getGraphs() (field name is null)
* added VelocyPack UTC_DATE parsing to Json String (ISO 8601)
* added configuration methods for VPackParser in ArangoDBAsync.Builder
* added VPackJsonSerializer for VPackParser

v4.1.1 (2016-11-09)
---------------------------
* changed json parsing of VelocyPack types not known in json
* fixed VelocyPack bug with non-ASCII characters
* added missing replicationFactor in CollectionCreateOptions
* added missing replicationFactor in CollectionPropertiesEntity
* added option serializeNull in DocumentUpdateOptions

v4.1.0 (2016-10-28)
---------------------------
* changed VelocyStream communication (send protocol header)
* added VeloyPack serialization support for java.time.Instant, LocalDate, LocalDateTime
* added ArangoUtil for manually de-/serialization